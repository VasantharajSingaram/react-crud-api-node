
Hide Node modules
----------------------------------------------------------------

Before commit we just want to create .gitignore file and add node modules to avoid the huge number of files to be added
// .gitignore

If the node_modules is not find in the git hub just enter npm install in terminal and install
because the node_modules will automatically will be install in the app according to the dependencies we are used.


Hide The UserName Password of MongoDb 
----------------------------------------------------------------

First install npm i dotenv

> Create a .env file in the root of your project:

> import * as dotenv from 'dotenv'

> dotenv.config()

> Paste the mongo url MONGO_URL = http..... without "" double quotes then.

> replace the mongo url with process.env.MONGO_URL; like next step

> const MONGO_URL = process.env.MONGO_URL; // process.env.MONGO_URL is a environment variable 
we can find this one by using console.log(process.env.MONGO_URL);

> Then add .env to the .ignore so the env file will be hided.


Now commit
----------------------------------------------------------------

> First Stage changes by pressing the + button

> Then give message to the commit


Deploying 
----------------------------------------------------------------

> Check the pckage.json "start": "node index.js" is available

> Then change the port because the port we are using locally is 4000 but the same port 
will not be available in the host website so we want to change the port
const PORT = process.env.PORT;

> Then for run the app in the local host just add PORT=4000 in the .env file

Versel
----------------------------------------------------------------

> Login with Github

> New project

> Select from repositary list

> Click import

> Go to Environmental variable

> Paste MONGO_URL in the name bar the Paste mongo url without codes in the value bar then deploy Click

> After deployed confetti will flow then click go to dashboard  

> If we visit the page (click visit) the page will be like html file it will displayed like html

> Because we didnt say to the versel that this is a node project. We want to say to the versel
that this is a node project

> so create vercel.json file in vscode

> paste this

{
    "builds": [
      {
        "src": "./index.js",
        "use": "@vercel/node"
      }
    ],
    "routes": [
      {
        "src": "/(.*)",
        "dest": "/index.js"
      }
    ]
 }

 > then save and push


 Express routes
 ----------------------------------------------------------------

 > We need to use express routes to make the app more clear like arranging the components.

 > First create routes folder and then create users.route.js file in the routes folder.

 > Move the app.get,put,post,delete codes into the users.route.js file.

 > Give a connection for the users.route.js file to index.js.

 > We need to say to the app that if /users or /users/:id means go to the perspective files by
 like this app.use('/users', usersRouter)

 > import express from "express"; in the users.route.js file

 > Then write const route = express.Router(); in the users.route.js file.

 > Change where and all app.get, app.post... to router.get, router.post in the users.route.js file.

 > Then add the line   export default router; at the end of the route.js file.

 > Amd import usersRouter from "./routes/users.route.js"; in the index.js file.

 > In index.js file we created app.use("/users", usersRouter); know so already we have mentioned 
 /users in the index.js file itself so we can avoid the /users in the codes router.get("/users, async...)
 so remove users from the code. It will look like this.
 
 * router.get("/", async function (request, response)
 * router.post("/", async function (request, response)

 > Then we should export { client }; (write at the end  from the index.js file and import { client } from "../index.js";

